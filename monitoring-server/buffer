http - metrics - format

//    {
//        "name":"http.server.requests",
//        "description":null,
//        "baseUnit":"milliseconds",
//        "measurements":[{"statistic":"COUNT","value":0.0},
//                        {"statistic":"TOTAL_TIME","value":0.0},
//                        {"statistic":"MAX","value":20.05443}],
//        "availableTags":[{"tag":"exception","values":["None"]},
//                         {"tag":"method","values":["GET"]},
//                         {"tag":"uri","values":["/actuator/metrics/{requiredMetricName}","/actuator/metrics"]},
//                         {"tag":"outcome","values":["CLIENT_ERROR","SUCCESS"]},
//                         {"tag":"status","values":["404","200"]}]
//    }

............................................................................................................

polling in main

//        MetricsService metricsService=new MetricsService();
//
//        //CPU Cores
//        IConsumer cpuCoreConsumer=new CPUCoresConsumer(metricsService);
//        PollingService cpuCoresPoll=new PollingService();
//    //    cpuCoresPoll.setTimerTask(cpuCoreConsumer,this.url);
//        cpuCoreConsumer.consumeMetrics("http://localhost:8089");
//
//        //ram
//        IConsumer ramConsumer=new RAMConsumer(metricsService);
//        PollingService ramPoll=new PollingService();
//        ramPoll.setTimerTask(ramConsumer,"http://localhost:8089");
//        ramPoll.start(20000);
//
//        //Http
//        IConsumer httpConsumer=new HttpConsumer(metricsService);
//        PollingService httpPoll=new PollingService();
//        httpPoll.setTimerTask(httpConsumer,"http://localhost:8089");
//        httpPoll.start(10000);
//
//        //health
//        IConsumer healthConsumer=new HealthConsumer(metricsService);
//        PollingService healthPoll=new PollingService();
//        healthPoll.setTimerTask(healthConsumer,"http://localhost:8089");
//        healthPoll.start(1000);
//
//        //disk
//        IConsumer diskConsumer=new HardDiskConsumer(metricsService);
//        PollingService diskPoll=new PollingService();
//        diskPoll.setTimerTask(diskConsumer,"http://localhost:8089");
//        diskPoll.start(20000);
//
//
//        //CPU Usage
//        IConsumer cpuUsageConsumer=new CPUUsageConsumer(metricsService);
//        PollingService cpuUsagePoll=new PollingService();
//        cpuUsagePoll.setTimerTask(cpuUsageConsumer,"http://localhost:8089");
//        cpuUsagePoll.start(20000);
//
//        //CPU Temp
//        IConsumer cpuTempConsumer=new CPUTempConsumer(metricsService);
//        PollingService cpuTempPoll=new PollingService();
//        cpuTempPoll.setTimerTask(cpuTempConsumer,"http://localhost:8089");
//        cpuTempPoll.start(20000);
//
//
////        //container
////        IConsumer containerConsumer=new ContainerConsumer(metricsService);
////
////        containerConsumer.consumeMetrics("http:172.23.239.222:9001");
//
//        //thread
//        IConsumer threadConsumer=new ThreadConsumer(metricsService);
//        PollingService threadPoll=new PollingService();
//        threadPoll.setTimerTask(threadConsumer,"http://localhost:8089");
//        threadPoll.start(10000);
//
//        //network
//        IConsumer networkConsumer=new NetworkConsumer(metricsService);
//        PollingService networkPoll=new PollingService();
//        networkPoll.setTimerTask(networkConsumer,"http://localhost:8089");
//        networkPoll.start(10000);